[{"C:\\Users\\rochi\\Desktop\\Projetos\\netflixclone\\src\\index.js":"1","C:\\Users\\rochi\\Desktop\\Projetos\\netflixclone\\src\\App.js":"2","C:\\Users\\rochi\\Desktop\\Projetos\\netflixclone\\src\\Tmdb.js":"3","C:\\Users\\rochi\\Desktop\\Projetos\\netflixclone\\src\\components\\Header\\Header.jsx":"4","C:\\Users\\rochi\\Desktop\\Projetos\\netflixclone\\src\\components\\MovieRow\\MovieRow.jsx":"5","C:\\Users\\rochi\\Desktop\\Projetos\\netflixclone\\src\\components\\FeaturedMovie\\FeaturedMovie.jsx":"6"},{"size":199,"mtime":1608602546402,"results":"7","hashOfConfig":"8"},{"size":2526,"mtime":1608616691045,"results":"9","hashOfConfig":"8"},{"size":3616,"mtime":1608610712525,"results":"10","hashOfConfig":"8"},{"size":659,"mtime":1608615705356,"results":"11","hashOfConfig":"8"},{"size":2150,"mtime":1608618777179,"results":"12","hashOfConfig":"8"},{"size":1943,"mtime":1608614476214,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1h7geyj",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"C:\\Users\\rochi\\Desktop\\Projetos\\netflixclone\\src\\index.js",[],["30","31"],"C:\\Users\\rochi\\Desktop\\Projetos\\netflixclone\\src\\App.js",["32"],"C:\\Users\\rochi\\Desktop\\Projetos\\netflixclone\\src\\Tmdb.js",["33"],"const API_KEY = 'd498db982a1854a0a9e15345b695ccef';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\n/* \r\n\r\n    - Originais NetFlix\r\n    - Recomendados\r\n    - Em Alta\r\n    - Ação\r\n    - Comédia\r\n    - Terror\r\n    - Romance\r\n    - Documentários\r\n\r\n*/\r\n\r\nconst basicFetch = async (endpoint) => { // Função para auxiliar para pegar o json e retornar o resultado para esse json\r\n\r\n    const req = await fetch(`${API_BASE}${endpoint}`); // await = É usado para esperar por uma Promise, Fetch = Usado para manipular interfaces com HTTP.\r\n    const json = await req.json(); \r\n    \r\n    return json;\r\n\r\n}\r\n\r\n/* \r\n\r\n    SLUG: São o final de uma URL, links 'permanentes ou amigáveis' = gênero \r\n    ITEMS: [] = Array com a lista dos Filmes \r\n\r\n*/\r\n\r\nexport default {\r\n\r\n    getHomeList: async () => { // ASYNC = Quem chamou não precisa esperar por sua execução e ela pode continuar normalmente sem bloquear a aplicação e quando termina volta ao inicio como um 'loop'!\r\n        \r\n        return [\r\n         \r\n            {\r\n\r\n                slug: 'originals', \r\n                title: 'Originais do NetFlix',\r\n                items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n\r\n            },\r\n\r\n            {\r\n\r\n                slug: 'trending',\r\n                title: 'Recomendados para Você',\r\n                items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n\r\n            },\r\n            \r\n            {\r\n\r\n                slug: 'toprated',\r\n                title: 'Em Alta',\r\n                items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n\r\n            },\r\n            \r\n            {\r\n\r\n                slug: 'action',\r\n                title: 'Ação',\r\n                items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n\r\n            },\r\n            \r\n            {\r\n\r\n                slug: 'comedy',\r\n                title: 'Comédia',\r\n                items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n\r\n            },\r\n            \r\n            {\r\n\r\n                slug: 'horror',\r\n                title: 'Terror',\r\n                items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n\r\n            },\r\n            \r\n            {\r\n\r\n                slug: 'romance',\r\n                title: 'Romance',\r\n                items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n\r\n            },\r\n            \r\n            {\r\n\r\n                slug: 'documentary',\r\n                title: 'Documentários',\r\n                items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n\r\n            },\r\n        \r\n        ];\r\n    },\r\n\r\n    // Para pegar mais informações do filme selecionado. (FILME EM DESTAQUE) \r\n    \r\n    getMovieInfo: async (movieId, type) => {\r\n\r\n        let info = {};\r\n\r\n        if (movieId) {\r\n            \r\n            switch(type) {\r\n\r\n                case 'movie': \r\n                    info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                break;\r\n\r\n                case 'tv':\r\n                    info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                                                            \r\n                break;\r\n\r\n                default:\r\n                    info = null;\r\n                break;\r\n\r\n            }\r\n        \r\n        }\r\n\r\n        return info;\r\n\r\n    }\r\n\r\n}","C:\\Users\\rochi\\Desktop\\Projetos\\netflixclone\\src\\components\\Header\\Header.jsx",["34","35","36"],"import React from 'react';\r\nimport './Header.css';\r\n\r\nexport default ({black}) => {\r\n\r\n    return (\r\n       \r\n       <header className={black ? 'black' : ''}>\r\n            \r\n            <div className=\"header--logo\">\r\n                <a href=\"/\">\r\n                    <img src=\"https://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\"/>\r\n                </a>\r\n            </div>\r\n\r\n            <div className=\"header--user\">\r\n                <a href=\"/\">\r\n                    <img src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\"/>\r\n                </a>\r\n            </div>\r\n        \r\n        </header>\r\n    )\r\n\r\n}\r\n","C:\\Users\\rochi\\Desktop\\Projetos\\netflixclone\\src\\components\\MovieRow\\MovieRow.jsx",["37"],"C:\\Users\\rochi\\Desktop\\Projetos\\netflixclone\\src\\components\\FeaturedMovie\\FeaturedMovie.jsx",["38"],"import React from 'react'\r\nimport './FeaturedMovie.css'\r\n\r\nexport default ({item}) => {\r\n\r\n    // Manipulando dados para pegar a DATA e o GÊNERO!\r\n\r\n    let firstDate = new Date(item.first_air_date);\r\n    \r\n    let genres = [];\r\n    for (let i in item.genres) {\r\n        genres.push( item.genres[i].name )\r\n    }\r\n   \r\n    return (\r\n\r\n        <section className=\"featured\" style={{\r\n\r\n            backgroundSize: 'cover', // Para a imagem aumentar ou diminuir dependendo do monitor da pessoa!\r\n            backgroundPosition: 'center',\r\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n\r\n        }}>\r\n            \r\n            <div className=\"featured--vertical\">\r\n                \r\n                <div className=\"featured--horizontal\">\r\n                    \r\n                    <div className=\"featured--name\">{item.original_name}</div>\r\n                    \r\n                    <div className=\"featured--info\">\r\n\r\n                        <div className=\"featured--points\">{item.vote_average} PONTOS</div>\r\n                        <div className=\"featured--year\">{firstDate.getFullYear()}</div>\r\n                        <div className=\"featured--seasons\">{item.number_of_seasons} TEMPORADA{item.number_of_seasons !== 1 ? 'S' : ''}</div> \r\n\r\n\r\n                     </div>\r\n\r\n                     <div className=\"featured--description\">{item.overview}</div>\r\n                     <div className=\"featured--buttons\">\r\n                        <a href={`/watch/${item.id}`} className=\"featured--watchbutton\">► Assistir</a>\r\n                        <a href={`/list/add/${item.id}`} className=\"featured--listbutton\">+ Minha Lista</a>\r\n                     </div>\r\n\r\n                     <div className=\"featured--genres\"><strong>Gêneros: </strong>{genres.join(', ')}</div>\r\n                \r\n                </div>\r\n            \r\n            </div>\r\n            \r\n        </section>\r\n\r\n    );\r\n\r\n}",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":9,"column":1,"nodeType":"45","endLine":106,"endColumn":2},{"ruleId":"43","severity":1,"message":"46","line":33,"column":1,"nodeType":"45","endLine":137,"endColumn":2},{"ruleId":"43","severity":1,"message":"44","line":4,"column":1,"nodeType":"45","endLine":25,"endColumn":2},{"ruleId":"47","severity":1,"message":"48","line":12,"column":21,"nodeType":"49","endLine":12,"endColumn":97},{"ruleId":"47","severity":1,"message":"48","line":18,"column":21,"nodeType":"49","endLine":18,"endColumn":111},{"ruleId":"43","severity":1,"message":"44","line":6,"column":1,"nodeType":"45","endLine":78,"endColumn":2},{"ruleId":"43","severity":1,"message":"44","line":4,"column":1,"nodeType":"45","endLine":56,"endColumn":2},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]